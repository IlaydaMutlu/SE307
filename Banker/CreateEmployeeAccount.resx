<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>